"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yu=#ynhu@w_)sp^4c58)ikeg2ur059s&o2qowqt8z(iix%i-iy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'corsheaders', 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions', # <-- เพิ่มบรรทัดนี้เข้าไป
    'debug_toolbar',  
     # Third-party apps
    'rest_framework', # << ตรวจสอบว่ามีบรรทัดนี้อยู่
    'rest_framework.authtoken', # <-- เพิ่มบรรทัดนี้
    # Local apps (แอปที่เราสร้างเอง)
    'users', # <-- เพิ่มบรรทัดนี้เข้าไป
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware', # <-- เพิ่มบรรทัดนี้
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'UM',  # <-- ใส่ชื่อ Database ของคุณ
        'USER': 'pacifica',      # <-- ใส่ชื่อผู้ใช้ MySQL
        'PASSWORD': 'P@cific@2017',  # <-- ใส่รหัสผ่าน
        'HOST': '127.0.0.1',          # หรือ 'localhost'
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },

    # อนุญาตให้ Frontend ที่รันบน localhost:3000 (React/Vue/etc.) เชื่อมต่อได้

]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = [
    #"https://localhost:5173",
    "https://127.0.0.1:5173", # <-- เพิ่มบรรทัดนี้
]

CSRF_TRUSTED_ORIGINS = [
    #"http://localhost:5173",
    "https://127.0.0.1:5173", # <-- เพิ่มบรรทัดนี้
     #"https://localhost:8000",   # <-- เพิ่มบรรทัดนี้
    "https://127.0.0.1:8000",  # <-- เพิ่มบรรทัดนี้
]

CORS_ALLOW_CREDENTIALS = True

LOGIN_REDIRECT_URL = '/admin/'


# ตั้งค่า SameSite=None เพื่ออนุญาตให้ส่ง Cookie ข้ามโดเมน (จำเป็นสำหรับ Frontend/Backend ที่แยกกัน)
CSRF_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_SAMESITE = 'None'

# การตั้งค่า SameSite=None บังคับให้ต้องตั้งค่า Secure=True ใน Production
# แต่ใน Development ที่ใช้ HTTP เราต้องตั้งเป็น False
# ใช้ not DEBUG เป็นวิธีที่ดีที่สุดในการจัดการเรื่องนี้โดยอัตโนมัติ
CSRF_COOKIE_SECURE = True  # <-- แก้ไขเป็น True
SESSION_COOKIE_SECURE = True # <-- แก้ไขเป็น True

INTERNAL_IPS = [
    "127.0.0.1",
]

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

AUTH_USER_MODEL = 'users.User'


# LDAP(เพิ่มที่ท้ายไฟล์)
import ldap
from django_auth_ldap.config import LDAPSearch, LDAPSearchUnion, GroupOfNamesType

AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# --- LDAP Configuration (ฉบับสมบูรณ์ที่แก้ไขแล้ว) ---

# 1. URL ของ LDAP Server
AUTH_LDAP_SERVER_URI = "ldap://AD3.pacifica.local:389"

# 2. Bind DN และ Password (User ที่มีสิทธิ์ค้นหา)
AUTH_LDAP_BIND_DN = "CN=get ldap,OU=SYSTEMSACCOUNT,OU=PACIFICA GROUP,DC=pacifica,DC=local"
AUTH_LDAP_BIND_PASSWORD = "Prg@2025#"

# 3. ตำแหน่งและ Filter ที่จะใช้ค้นหา User (ใช้ OU=PACIFICA GROUP เหมือนเดิม)
AUTH_LDAP_USER_SEARCH = LDAPSearch(
    "OU=PACIFICA GROUP,DC=pacifica,DC=local",
    ldap.SCOPE_SUBTREE,
    "(sAMAccountName=%(user)s)"
)

# 4. การ Mapping ระหว่างฟิลด์ใน LDAP กับฟิลด์ในโมเดล User ของเรา
AUTH_LDAP_USER_ATTR_MAP = {
    "username": "sAMAccountName",
    "first_name": "givenName",
    "last_name": "sn",
    "company": "company",
    "email": "mail",
    "full_name_eng": "displayName",
    "employee_id": "employeeID",
    "department": "department",
    "position": "title",
}

# --- การตั้งค่า Group และ Permissions (หัวใจของการแก้ไข) ---
AUTH_LDAP_GROUP_SEARCH = LDAPSearch("DC=pacifica,DC=local", ldap.SCOPE_SUBTREE, "(objectClass=group)")
AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr="cn")

# บอกให้ซิงค์ Flag จาก Group
AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    # ถ้า User เป็นสมาชิกของ Group นี้ ให้ตั้งค่า Flag เหล่านี้เป็น True
    "is_staff": "CN=Django_staff,OU=SYSTEMSACCOUNT,OU=PACIFICA GROUP,DC=pacifica,DC=local", # <-- !! แก้ไข Path นี้ !!
    "is_superuser": "CN=Django_Admins,OU=SYSTEMSACCOUNT,OU=PACIFICA GROUP,DC=pacifica,DC=local", # <-- !! แก้ไข Path นี้ !!
}

# บอกให้ Django สร้าง/อัปเดต User และตรวจสอบ Group เสมอ
AUTH_LDAP_ALWAYS_UPDATE_USER = True
#AUTH_LDAP_FIND_GROUP_PERMS = True
#AUTH_LDAP_MIRROR_GROUPS = True

# --- เพิ่มส่วนนี้ทั้งหมดเข้าไป ---
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    },
    'loggers': {
        # --- บรรทัดนี้สำคัญที่สุด ---
        # บอกให้แสดง Log ทั้งหมดจาก django_auth_ldap
        'django_auth_ldap': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}